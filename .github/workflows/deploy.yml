name: Deploy Only dist/

on:
  push:
    branches: [dev]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build project (ignore warnings)
        run: npm run build-only

      # ‚úÖ Crear paquete tar.gz con dist/
      - name: Create deploy package
        run: |
          tar -czf deploy.tar.gz -C dist .

      # ‚úÖ Agregar la clave privada SSH
      - name: Add SSH key
        run: |
          echo "${{ secrets.VPS_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      # ‚úÖ Subir deploy.tar.gz al servidor
      - name: Upload deploy package
        run: |
          echo "üì¶ Subiendo deploy.tar.gz al VPS..."
          scp -i private_key.pem -o StrictHostKeyChecking=no deploy.tar.gz ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/deploy.tar.gz

      # ‚úÖ Extraer y hacer deploy at√≥mico
      - name: Atomic Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            DEPLOY_DIR="${{ secrets.VPS_PATH }}"
            TEMP_DIR="/tmp/deploy_$(date +%s)"

            # 1. Crear directorio temporal
            mkdir -p "$TEMP_DIR" || exit 1

            # 2. Extraer paquete al directorio temporal
            if ! tar -xzf /tmp/deploy.tar.gz -C "$TEMP_DIR"; then
                echo "‚ùå Error extrayendo deploy.tar.gz"
                rm -rf "$TEMP_DIR"
                exit 1
            fi

            # 3. Reemplazo at√≥mico
            if [ -d "$DEPLOY_DIR" ]; then
                BACKUP_DIR="${DEPLOY_DIR}_backup_$(date +%s)"
                mv "$DEPLOY_DIR" "$BACKUP_DIR" || exit 1
            fi

            mv "$TEMP_DIR" "$DEPLOY_DIR" || {
                echo "‚ùå Error en deploy at√≥mico";
                [ -d "$BACKUP_DIR" ] && mv "$BACKUP_DIR" "$DEPLOY_DIR";
                exit 1;
            }

            # 4. Limpieza
            [ -d "$BACKUP_DIR" ] && rm -rf "$BACKUP_DIR"
            rm -f /tmp/deploy.tar.gz
            chmod -R 755 "$DEPLOY_DIR"
            echo "‚úÖ Deploy at√≥mico completado"
